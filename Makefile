# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win64)
  Hazel_config = debug_win64
  Sandbox_config = debug_win64

else ifeq ($(config),debug_linux-arch)
  Hazel_config = debug_linux-arch
  Sandbox_config = debug_linux-arch

else ifeq ($(config),release_win64)
  Hazel_config = release_win64
  Sandbox_config = release_win64

else ifeq ($(config),release_linux-arch)
  Hazel_config = release_linux-arch
  Sandbox_config = release_linux-arch

else ifeq ($(config),dist_win64)
  Hazel_config = dist_win64
  Sandbox_config = dist_win64

else ifeq ($(config),dist_linux-arch)
  Hazel_config = dist_linux-arch
  Sandbox_config = dist_linux-arch

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := Hazel Sandbox

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

Hazel:
ifneq (,$(Hazel_config))
	@echo "==== Building Hazel ($(Hazel_config)) ===="
	@${MAKE} --no-print-directory -C Hazel -f Makefile config=$(Hazel_config)
endif

Sandbox: Hazel
ifneq (,$(Sandbox_config))
	@echo "==== Building Sandbox ($(Sandbox_config)) ===="
	@${MAKE} --no-print-directory -C Sandbox -f Makefile config=$(Sandbox_config)
endif

clean:
	@${MAKE} --no-print-directory -C Hazel -f Makefile clean
	@${MAKE} --no-print-directory -C Sandbox -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win64"
	@echo "  debug_linux-arch"
	@echo "  release_win64"
	@echo "  release_linux-arch"
	@echo "  dist_win64"
	@echo "  dist_linux-arch"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   Hazel"
	@echo "   Sandbox"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"